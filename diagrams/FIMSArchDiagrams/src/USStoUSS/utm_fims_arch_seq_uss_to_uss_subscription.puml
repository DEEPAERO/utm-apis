' Project      : NASA UTM
' Author       : Joseph Rios, joseph.l.rios@nasa.gov
' First version: 19 May 2017

@startuml
!include ../utm_fims_arch_seq_style.puml

participant "USS A" as a
participant "USS A Instance 1" as A
participant "USS B Instance 2" as B
participant "FIMS" as F

title USS to USS Mutual Subscription\n\
VERSION_STAMP

note over B
    Assuming USS B already created and
    registered USS B Instance 2
end note

create A
a -> A: create

autonumber

a<->F: Register USS Instance with FIMS

F->>B: Receive notification of USS A Instance\nvia HTTPS POST

F->>A: Receive notification of USS A Instance\nvia HTTPS POST

note over A
    Since this instance was not listening for USS
    operation notifications prior to now, it must
    ask for relevant USS Operation data to
    'catch up' on the operational situation. This
    step (4+5) may not be necessary if the USS itself
    had been listening to USS Instance data and
    can use that for being "caught up."
end note
A->F: Request USS Instances intersecting\nUSS A Instance
activate F
F->A: HTTP 200
deactivate F

A->> B: Request/create positions websocket
B->B: Recognize operation is intersecting\nwith USS B Instance

note right of B
    A query may be necessary to FIMS
    if there is not sufficient data
    in the announcement of USS A's
    Instance. This step may be
    uncessary depending on announcement
    protocol/data decided in the future.
end note
B->F: Request full information regarding\nUSS A Instance
activate F
F-->B: HTTP 200


deactivate F

B->>A: Request/create positions websocket

note right of A
 The Instances by USS A and
 USS B are mutually connected
 for sharing position data
 and are aware of each others'
 RESTful endpoints if needed.
end note




@enduml